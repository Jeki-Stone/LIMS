<AuthorizeView Roles="ADMIN">
    <NotAuthorized>
        <p>Вы не обладаете необходимыми правами для доступа к этой странице.</p>
    </NotAuthorized>
    <Authorized>
        @using LIMSBlazor.Data
        @page "/config/instrumtype/instrumtypeanalyticaddedit/{InstrumentTypeId:int}"
        @page "/config/instrumtype/instrumtypeanalyticaddedit/{InstrumentTypeId:int}/{AnalyticalServiceId:int}"
        @inject IInstrumTypeAnalyticService InstrumTypeAnalyticService
        @inject IInstrumTypeService InstrumTypeService
        @inject IAnalyticalServService AnalyticalServService
        @inject NavigationManager NavigationManager

        <DataEdit PageTitle="@pagetitle" Model="@instrumtypeanalytic" BtnSaveText="@buttontext" OnValidSubmit="@InstrumTypeAnalyticSave" OnClickCancel="@Cancel">
            <table>
                <tr>
                    <td>Тип оборудования:</td>
                    <td>@instrumtypes?.Where(x => x.Id == InstrumentTypeId).FirstOrDefault()?.Name</td>
                </tr>
                <tr>
                    <td>Аналитический сервис:</td>
                    <td>
                        <select @bind="instrumtypeanalytic.AnalyticalServiceId" class="form-control" required>
                            @if (analyticalservs != null)
                            {
                                <option value="0">Выберите значение</option>
                                foreach (var item in analyticalservs)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
            </table>
        </DataEdit>

        @code {
            /// <summary>
            /// Создаём необходимые компоненты
            /// </summary>
            InstrumTypeAnalytic instrumtypeanalytic = new InstrumTypeAnalytic();

            IEnumerable<InstrumType> instrumtypes;
            IEnumerable<AnalyticalServ> analyticalservs;

            [Parameter]
            public int InstrumentTypeId { get; set; }
            [Parameter]
            public int AnalyticalServiceId { get; set; }

            /// <summary>
            /// Задаём базовые значения
            /// </summary>
            public string pagetitle = "Добавить новый аналитический сервис типа";
            public string buttontext = "Добавить";

            /// <summary>
            /// Исполняемая при запуске страницы задача
            /// </summary>
            protected override async Task OnInitializedAsync()
            {
                instrumtypes = await InstrumTypeService.InstrumTypeList();
                analyticalservs = await AnalyticalServService.AnalyticalServList();
                /// Если Id ноль то будет добавлено новое значение
                if ((InstrumentTypeId != 0) & (AnalyticalServiceId != 0))
                {
                    instrumtypeanalytic = await InstrumTypeAnalyticService.InstrumTypeAnalytic_GetOne(InstrumentTypeId, AnalyticalServiceId);
                    pagetitle = "Изменить данные аналитического сервиса типа";
                    buttontext = "Изменить";
                }
            }

            /// <summary>
            /// Задача сохраняющая при Id=0 или обновляющая данные если Id задан в БД
            /// </summary>
            protected async Task InstrumTypeAnalyticSave()
            {
                if ((InstrumentTypeId != 0) & (AnalyticalServiceId != 0))
                {
                    instrumtypeanalytic.OldAnalyticalServiceId = AnalyticalServiceId;
                    await InstrumTypeAnalyticService.InstrumTypeAnalyticUpdate(instrumtypeanalytic);
                }
                else
                {
                    await InstrumTypeAnalyticService.InstrumTypeAnalyticInsert(instrumtypeanalytic, InstrumentTypeId);
                }
                NavigationManager.NavigateTo("config/instrumtype/instrumtypeanalyticlist/" + InstrumentTypeId);
            }

            /// <summary>
            /// Отмена изменений и возвращение на прошлую страницу
            /// </summary>
            void Cancel()
            {
                NavigationManager.NavigateTo("config/instrumtype/instrumtypeanalyticlist/" + InstrumentTypeId);
            }
        }
</Authorized>
</AuthorizeView>