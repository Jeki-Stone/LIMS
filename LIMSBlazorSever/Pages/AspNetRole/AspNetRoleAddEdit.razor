@using LIMSBlazor.Data
@page "/config/roleaddedit"
@page "/config/roleaddedit/{id}"
@inject IAspNetRoleService AspNetRoleService
@inject ILabService LabService
@inject NavigationManager NavigationManager

<DataEdit PageTitle="@pagetitle" Model="@aspNetRole" BtnSaveText="@buttontext" OnValidSubmit="@RoleSave" OnClickCancel="@Cancel">
    <table>
        <tr>
            <td>Название:</td>
            <td><input type="text" @bind="aspNetRole.Name" class="form-control" required></td>
        </tr>
        <tr>
            <td>Описание:</td>
            <td>
                <select @bind="aspNetRole.LabId" required class="form-control">
                    @if (labs != null)
                    {
                        <option value="0">Выберите значение</option>
                        foreach (var item in labs)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                </select>
            </td>
        </tr>
    </table>
</DataEdit>

@code {
    /// <summary>
    /// Создаём необходимые компоненты
    /// </summary>
    AspNetRole aspNetRole = new AspNetRole();

    IEnumerable<Lab> labs;

    [Parameter]
    public string id { get; set; }

    /// <summary>
    /// Задаём базовые значения
    /// </summary>
    public string pagetitle = "Добавить новую роль";
    public string buttontext = "Добавить";

    /// <summary>
    /// Исполняемая при запуске страницы задача
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        labs = await LabService.LabList();
        /// Если Id ноль то будет добавлено новое значение
        if (id != null)
        {
            aspNetRole = await AspNetRoleService.AspNetRole_GetOne(id);
            pagetitle = "Изменить данные роли";
            buttontext = "Изменить";
        }
    }

    /// <summary>
    /// Задача сохраняющая при Id=0 или обновляющая данные если Id задан в БД
    /// </summary>
    protected async Task RoleSave()
    {
        if (aspNetRole.Id == null)
        {
            await AspNetRoleService.AspNetRoleInsert(aspNetRole);
        }
        else
        {
            await AspNetRoleService.AspNetRoleUpdate(aspNetRole);
        }
        NavigationManager.NavigateTo("/config/rolelist");
    }

    /// <summary>
    /// Отмена изменений и возвращение на прошлую страницу
    /// </summary>
    void Cancel()
    {
        NavigationManager.NavigateTo("/config/rolelist");
    }
}
