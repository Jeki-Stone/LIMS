@using LIMSBlazor.Data
@page "/config/roledelete/{id}"
@inject IAspNetRoleService AspNetRoleService
@inject ILabService LabService
@inject NavigationManager NavigationManager

<DataEdit FormType="Delete" PageTitle="Удалить роль из базы данных" DeleteWarning="Вы уверены что хотите удалить эту роль? Данные нельзя будет вернуть!" Model="@aspNetRole" OnClickDelete="@Delete" OnClickCancel="@Cancel">
    <table>
        <tr>
            <td>Название:</td>
            <td>@aspNetRole.Name</td>
        </tr>
        <tr>
            <td>Описание:</td>
            <td>@labs?.Where(x => x.Id == aspNetRole.LabId).FirstOrDefault()?.Name</td>
        </tr>
    </table>
</DataEdit>


@code { 
    /// <summary>
    /// Создаём необходимые компоненты
    /// </summary>
    AspNetRole aspNetRole = new AspNetRole();

    IEnumerable<Lab> labs;

    [Parameter]
    public string id { get; set; }

    /// <summary>
    /// Исполняемая при запуске страницы задача
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        aspNetRole = await AspNetRoleService.AspNetRole_GetOne(id);
        labs = await LabService.LabList();
    }

    /// <summary>
    /// Задача удаляющая запись из БД
    /// </summary>
    protected async Task Delete()
    {
        // Insert if id is zero.
        await AspNetRoleService.AspNetRoleDelete(id);
        NavigationManager.NavigateTo("/config/rolelist");
    }

    /// <summary>
    /// Отмена изменений и возвращение на прошлую страницу
    /// </summary>
    void Cancel()
    {
        NavigationManager.NavigateTo("/config/rolelist");
    }
}
