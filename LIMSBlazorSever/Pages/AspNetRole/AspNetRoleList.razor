@using LIMSBlazor.Data
@page "/config/rolelist"
@inject IAspNetRoleService AspNetRoleService
@inject ILabService LabService

<DataView PageTitle="Список ролей" UrlAdd="/config/roleaddedit" UrlAddText="Добавить новую роль">
    <Header>
        <tr>
            <td style="text-align:center">#</td>
            <td>Id</td>
            <td>Название</td>
            <td>Лаборатория</td>
        </tr>
    </Header>
    <Rows>
        @if (aspNetRoles == null)
        {
            <p style="text-align:center">
                <img src="../images/loader.gif" width="50" height="50" />
            </p>
        }
        else
        {
            @foreach (var aspNetRole in aspNetRoles)
            {
                <tr>
                    <td style="text-align:center">
                        <a href="/config/roleaddedit/@aspNetRole.Id">
                            <img src="../images/iEdit.png" width="20" height="20" />
                        </a>
                        &nbsp
                        <a href="/config/roledelete/@aspNetRole.Id">
                            <img src="../images/iTrash.png" alt="Delete" title="Delete" width="20" height="20" />
                        </a>
                    </td>
                    <td>@aspNetRole.Id</td>
                    <td>@aspNetRole.Name</td>
                    <td>@labs?.Where(x => x.Id == aspNetRole.LabId).FirstOrDefault()?.Name</td>
                </tr>
            }
        }
    </Rows>
</DataView>

@code {
    /// <summary>
    /// Создаём необходимые компоненты
    /// </summary>
    IEnumerable<AspNetRole> aspNetRoles;
    IEnumerable<Lab> labs;

    /// <summary>
    /// Исполняемая при запуске страницы задача
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        aspNetRoles = await AspNetRoleService.AspNetRoleList();
        labs = await LabService.LabList();
    }
}
