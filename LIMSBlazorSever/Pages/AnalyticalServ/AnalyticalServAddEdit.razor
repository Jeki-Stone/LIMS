<AuthorizeView Roles="ADMIN">
    <NotAuthorized>
        <p>Вы не обладаете необходимыми правами для доступа к этой странице.</p>
    </NotAuthorized>
    <Authorized>
        @using LIMSBlazor.Data
        @page "/config/analyticalservaddedit"
        @page "/config/analyticalservaddedit/{id:int}"
        @inject IAnalyticalServService AnalyticalServService
        @inject ICategoryService CategoryService
        @inject IUnitService UnitService
        @inject NavigationManager NavigationManager

        <DataEdit PageTitle="@pagetitle" Model="@analyticalserv" BtnSaveText="@buttontext" OnValidSubmit="@AnalyticalServSave" OnClickCancel="@Cancel">
            <table>
                <tr>
                    <td>Наименование:</td>
                    <td><input type="text" @bind="analyticalserv.Name" class="form-control" required></td>
                </tr>
                <tr>
                    <td>Категория:</td>
                    <td>
                        <select @bind="analyticalserv.CategoryId" class="form-control" required>
                            @if (сategorys != null)
                            {
                                <option value="0">Выберите значение</option>
                                foreach (var item in сategorys)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>Ед. измерения:</td>
                    <td>
                        <select @bind="analyticalserv.UnitId" class="form-control" required>
                            @if (units != null)
                            {
                                <option value="0">Выберите значение</option>
                                foreach (var item in units)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>Описание:</td>
                    <td><textarea class="form-control" type="text" id="exampleFormControlTextarea1" rows="5" cols="100" @bind="analyticalserv.Description"></textarea></td>
                </tr>
            </table>
        </DataEdit>

        @code {
            /// <summary>
            /// Создаём необходимые компоненты
            /// </summary>
            AnalyticalServ analyticalserv = new AnalyticalServ();

            IEnumerable<Category> сategorys;
            IEnumerable<Unit> units;

            [Parameter]
            public int id { get; set; }

            /// <summary>
            /// Задаём базовые значения
            /// </summary>
            public string pagetitle = "Добавить новый аналитический сервис";
            public string buttontext = "Добавить";

            /// <summary>
            /// Исполняемая при запуске страницы задача
            /// </summary>
            protected override async Task OnInitializedAsync()
            {
                сategorys = await CategoryService.CategoryList();
                units = await UnitService.UnitList();
                /// Если Id ноль то будет добавлено новое значение
                if (id != 0)
                {
                    analyticalserv = await AnalyticalServService.AnalyticalServ_GetOne(id);
                    pagetitle = "Изменить данные аналитического сервиса";
                    buttontext = "Изменить";
                }
            }

            /// <summary>
            /// Задача сохраняющая при Id=0 или обновляющая данные если Id задан в БД
            /// </summary>
            protected async Task AnalyticalServSave()
            {
                if (analyticalserv.Id == 0)
                {
                    await AnalyticalServService.AnalyticalServInsert(analyticalserv);
                }
                else
                {
                    await AnalyticalServService.AnalyticalServUpdate(analyticalserv);
                }
                NavigationManager.NavigateTo("config/analyticalservlist");
            }

            /// <summary>
            /// Отмена изменений и возвращение на прошлую страницу
            /// </summary>
            void Cancel()
            {
                NavigationManager.NavigateTo("config/analyticalservlist");
            }
        }
    </Authorized>
</AuthorizeView>
