<AuthorizeView Roles="ADMIN">
    <NotAuthorized>
        <p>Вы не обладаете необходимыми правами для доступа к этой странице.</p>
    </NotAuthorized>
    <Authorized>
        @using LIMSBlazor.Data
        @using Microsoft.AspNetCore.Identity;
        @page "/config/useraddedit/"
        @page "/config/useraddedit/{id}"
        @inject IAspNetUserService AspNetUserService
        @inject NavigationManager NavigationManager

        <DataEdit PageTitle="@pagetitle" Model="@aspNetUser" BtnSaveText="@buttontext" OnValidSubmit="@UserSave" OnClickCancel="@Cancel">
            <table>
                <tr>
                    <td>Имя/E-mail пользователя:</td>
                    <td><input type="text" @bind="aspNetUser.Email" class="form-control" required></td>
                </tr>
                <tr>
                    <td>Номер телефона Пользователя:</td>
                    <td><input type="text" @bind="aspNetUser.PhoneNumber" class="form-control" required></td>
                </tr>
                <tr>
                    <td>Пароль:</td>
                    <td><input type="text" @bind="password" class="form-control" required></td>
                </tr>
                <tr>
                    <td>Подтверждение пароля:</td>
                    <td><input type="text" @bind="passwordConfirm" class="form-control" required></td>
                </tr>
            </table>
            <div class="alert alert-danger" style="display:@visibl" role="alert">
                Пароль должен быть не меньше 6 букв, С как минимум 1 заглавной буквой, цифрой и занком ( например !+?/).
            </div>
        </DataEdit>

        @code {
            /// <summary>
            /// Создаём необходимые компоненты
            /// </summary>
            IdentityUser aspNetUser = new IdentityUser();

            [Parameter]
            public string? id { get; set; }

            /// <summary>
            /// Задаём базовые значения
            /// </summary>
            public string pagetitle = "Добавить нового пользователя";
            public string buttontext = "Добавить";

            public string password;
            public string passwordConfirm;
            public string visibl = "none";

            /// <summary>
            /// Исполняемая при запуске страницы задача
            /// </summary>
            protected override async Task OnInitializedAsync()
            {
                if (id != null)
                {
                    aspNetUser = await AspNetUserService.AspNetUser_GetOne((string)id);
                    pagetitle = "Изменить данные пользователя";
                    buttontext = "Изменить";
                }
            }

            /// <summary>
            /// Задача сохраняющая
            /// </summary>
            protected async Task UserSave()
            {
                if (id != null)
                {
                    // обновить если id > 0
                    await AspNetUserService.AspNetUserUpdate(aspNetUser);
                    NavigationManager.NavigateTo("/config/userlist");
                }
                else
                {
                    if (password == passwordConfirm)
                    {
                        if (password.Length >= 6 && password.Any(e => char.IsUpper(e)) && password.Any(e => char.IsDigit(e)) && password.Any(e => char.IsPunctuation(e)))
                        {
                            visibl = "none";
                            aspNetUser = new IdentityUser { UserName = aspNetUser.Email, Email = aspNetUser.Email, PhoneNumber = aspNetUser.PhoneNumber, EmailConfirmed = true };
                            await AspNetUserService.AspNetUserInsert(aspNetUser, password);
                            NavigationManager.NavigateTo("/config/userlist");
                        }
                        else
                        {
                            visibl = "block";
                        }
                    }
                }
            }

            /// <summary>
            /// Отмена изменений и возвращение на прошлую страницу
            /// </summary>
            void Cancel()
            {
                NavigationManager.NavigateTo("/config/userlist");
            }
        }
    </Authorized>
</AuthorizeView>
