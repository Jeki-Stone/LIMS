@using LIMSBlazor.Data
@page "/config/useraddedit"
@page "/config/useraddedit/{string:int}"
@inject IAspNetUserService AspNetUserService
@inject NavigationManager NavigationManager

<DataEdit PageTitle="@pagetitle" Model="@aspNetUser" BtnSaveText="@buttontext" OnValidSubmit="@UserSave" OnClickCancel="@Cancel">
    <table>
        <tr>
            <td>Имя Пользователя:</td>
            <td><input type="text" @bind="aspNetUser.UserName" class="form-control" required></td>
        </tr>
        <tr>
            <td>E-mail пользователя:</td>
            <td><input type="text" @bind="aspNetUser.Email" class="form-control" required></td>
        </tr>
        <tr>
            <td>Номер телефона Пользователя:</td>
            <td><input type="text" @bind="aspNetUser.PhoneNumber" class="form-control" required></td>
        </tr>
    </table>
</DataEdit>

@code {
    /// <summary>
    /// Создаём необходимые компоненты
    /// </summary>
    AspNetUser aspNetUser = new AspNetUser();

    [Parameter]
    public string? id { get; set; }

    /// <summary>
    /// Задаём базовые значения
    /// </summary>
    public string pagetitle = "Добавить нового пользователя";
    public string buttontext = "Добавить";

    /// <summary>
    /// Исполняемая при запуске страницы задача
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        /// Если Id ноль то будет добавлено новое значение
        if (id != null)
        {
            aspNetUser = await AspNetUserService.AspNetUser_GetOne((string)id);
            pagetitle = "Изменить данные пользователя";
            buttontext = "Изменить";
        }
    }

    /// <summary>
    /// Задача сохраняющая
    /// </summary>
    protected async Task UserSave()
    {
        // Update is id > 0
        await AspNetUserService.AspNetUserUpdate(aspNetUser);
        NavigationManager.NavigateTo("/config/userlist");
    }

    /// <summary>
    /// Отмена изменений и возвращение на прошлую страницу
    /// </summary>
    void Cancel()
    {
        NavigationManager.NavigateTo("/config/userlist");
    }
}
