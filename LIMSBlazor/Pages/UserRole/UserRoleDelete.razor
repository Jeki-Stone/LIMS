@using LIMSBlazor.Data
@page "/config/userlist/userroledelete/{UserId:int}/{LabId:int}/{RoleId:int}"
@inject IUserRoleService UserRoleService
@inject ILabService LabService
@inject IUserService UserService
@inject IRoleService RoleService
@inject NavigationManager NavigationManager

<DataEdit FormType="Delete" PageTitle="Удалить роль пользователя из базы данных" DeleteWarning="Вы уверены что хотите удалить эту роль пользователя? Данные нельзя будет вернуть!" Model="@userrole" OnClickDelete="@Delete" OnClickCancel="@Cancel">
    <table>
        <tr>
            <td>Пользователь:</td>
            <td>@users?.Where(x => x.Id == userrole.UserId).FirstOrDefault()?.Name</td>
        </tr>
        <tr>
            <td>Лаборатория:</td>
            <td>@labs?.Where(x => x.Id == userrole.LabId).FirstOrDefault()?.Name</td>
        </tr>
        <tr>
            <td>Роль:</td>
            <td>@roles?.Where(x => x.Id == userrole.RoleId).FirstOrDefault()?.Name</td>
        </tr>
    </table>
</DataEdit>


    @code { // Create a new, empty  object
        UserRole userrole = new UserRole();

        IEnumerable<User> users;
        IEnumerable<Lab> labs;
        IEnumerable<Role> roles;

        [Parameter]
        public int UserId { get; set; }
        [Parameter]
        public int LabId { get; set; }
        [Parameter]
        public int RoleId { get; set; }

        //Executes on page open..
        protected override async Task OnInitializedAsync()
        {
            userrole = await UserRoleService.UserRole_GetOne(UserId, LabId, RoleId);
            users = await UserService.UserList();
            labs = await LabService.LabList();
            roles = await RoleService.RoleList();
        }

        protected async Task Delete()
        {
            // Insert if id is zero.
            await UserRoleService.UserRoleDelete(UserId, LabId, RoleId);
            NavigationManager.NavigateTo("/config/userlist/userrolelist/" + UserId);
        }
        void Cancel()
        {
            NavigationManager.NavigateTo("/config/userlist/userrolelist/" + UserId);
        } }
