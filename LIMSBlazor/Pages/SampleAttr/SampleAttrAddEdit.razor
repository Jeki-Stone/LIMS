@using LIMSBlazor.Data
@page "/samplelog/sample/sampleattraddedit/{SampleId:int}"
@page "/samplelog/sample/sampleattraddedit/{SampleId:int}/{AttrId:int}"
@inject ISampleAttrService SampleAttrService
@inject ISampleService SampleService
@inject IAttrService AttrService
@inject NavigationManager NavigationManager

<DataEdit PageTitle="@pagetitle" Model="@sampleattr" BtnSaveText="@buttontext" OnValidSubmit="@SampleAttrSave" OnClickCancel="@Cancel">
    <table>
        <tr>
            <td>Id испытания:</td>
            <td>@SampleId</td>
        </tr>
        <tr>
            <td>Атрибут:</td>
            <td>
                <select @bind="sampleattr.AttrId" class="form-control" required disabled="@(sampleattr.SampleId != 0)">
                    @if (attrs != null)
                    {
                        <option value="0">Выберите значение</option>
                        foreach (var item in attrs)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td>Значение:</td>
            <AttrEdit Attr="@sampleattr" />
        </tr>
    </table>
</DataEdit>

@code {
    /// <summary>
    /// Создаём необходимые компоненты
    /// </summary>
    SampleAttr sampleattr = new SampleAttr();

    IEnumerable<Sample> samples;
    IEnumerable<Attr> attrs;

    [Parameter]
    public int SampleId { get; set; }
    [Parameter]
    public int AttrId { get; set; }

    /// <summary>
    /// Задаём базовые значения
    /// </summary>
    public string pagetitle = "Добавить новый атрибут испытания";
    public string buttontext = "Добавить";

    /// <summary>
    /// Исполняемая при запуске страницы задача
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        samples = await SampleService.SampleList();
        attrs = await AttrService.AttrList();
        /// Если Id ноль то будет добавлено новое значение
        if ((SampleId != 0) & (AttrId != 0))
        {
            sampleattr = await SampleAttrService.SampleAttr_GetOne(SampleId, AttrId);
            pagetitle = "Изменить данные атрибута испытания";
            buttontext = "Изменить";
        }
    }

    /// <summary>
    /// Задача сохраняющая при Id=0 или обновляющая данные если Id задан в БД
    /// </summary>
    protected async Task SampleAttrSave()
    {
        if ((sampleattr.SampleId != 0) & (sampleattr.AttrId != 0))
        {
            sampleattr.UpdateUser = "Изменивший пользователь";
            sampleattr.UpdateTime = DateTime.Now;
            sampleattr.OldAttrId = AttrId;
            await SampleAttrService.SampleAttrUpdate(sampleattr);
        }
        else
        {
            sampleattr.UpdateUser = "Создавший пользователь";
            await SampleAttrService.SampleAttrInsert(sampleattr, SampleId);
        }

        NavigationManager.NavigateTo("samplelog/sample/sampleattrlist/" + SampleId);
    }

    /// <summary>
    /// Отмена изменений и возвращение на прошлую страницу
    /// </summary>
    void Cancel()
    {
        NavigationManager.NavigateTo("samplelog/sample/sampleattrlist/" + SampleId);
    }
}
