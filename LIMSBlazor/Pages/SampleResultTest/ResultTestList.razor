@using LIMSBlazor.Data
@page "/test/sample/resultlist/{SampleId:int}"
@inject IResultService ResultService
@inject ISampleService SampleService
@inject IAnalyticalServService AnalyticalServService

<DataView PageTitle="Список результатов испытания" UrlAdd=@UrlSampleId UrlBack="/test/samplelist" UrlAddText="Добавить новый результат испытания" UrlBackText="Вернуться к списку испытаний">
    <Header>
        <tr>
            <th style="text-align:center">#</th>
            <th>Id</th>
            <td>Id испытания</td>
            <td>Аналитический сервис</td>
            <td>Номер результатов</td>
            <td>Результат</td>
            <td>Готовность</td>
            <td>Записка</td>
            <td>Время создания</td>
            <td>Время последних изменений</td>
            <td>Кем созданно</td>
            <td>Кем изменено</td>
        </tr>
    </Header>
    <Rows>
        @if (results == null)
        {
            <p style="text-align:center">
                <img src="../images/loader.gif" />
            </p>
        }
        else
        {
            @foreach (var result in results)
            {
                if (result.SampleId == SampleId)
                {
                    <tr>
                        <td style="text-align:center">
                            <a href="/test/sample/resultaddedit/@SampleId/@result.Id">
                                <img src="../images/iEdit.png" width="20" height="20" />
                            </a>
                            &nbsp
                            <a href="/test/sample/resultdelete/@SampleId/@result.Id">
                                <img src="../images/iTrash.png" alt="Delete" title="Delete" width="20" height="20" />
                            </a>
                        </td>
                        <td>@result.Id</td>
                        <td>@result.SampleId</td>
                        <td>@analyticalservs?.Where(x => x.Id == result.AnalyticalServiceId).FirstOrDefault()?.Name</td>
                        <td>@result.ValueNo</td>
                        <td>@result.Value</td>
                        <td>@result.IsFinal</td>
                        <td>@result.Note</td>
                        <td>@result.CreateTime</td>
                        <td>@result.UpdateTime</td>
                        <td>@result.CreateUser</td>
                        <td>@result.UpdateUser</td>
                    </tr>
                }
            }
        }
    </Rows>
</DataView>

@code {
    IEnumerable<Result> results;
    IEnumerable<Sample> samples;
    IEnumerable<AnalyticalServ> analyticalservs;

    [Parameter]
    public int SampleId { get; set; }
    [Parameter]
    public string UrlSampleId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        results = await ResultService.ResultList();
        samples = await SampleService.SampleList();
        analyticalservs = await AnalyticalServService.AnalyticalServList();
        UrlSampleId = "/test/sample/resultaddedit/" + SampleId;
    }
}
