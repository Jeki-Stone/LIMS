@using LIMSBlazor.Data
@page "/test/sampleaddedit/{Id:int}"
@inject ISampleService SampleService
@inject ICliService CliService
@inject ISampleTypeService SampleTypeService
@inject ILocService LocService
@inject ISampleTypeAnalyticalService SampleTypeAnalyticalService
@inject ISampleAnalyticalService SampleAnalyticalService
@inject NavigationManager NavigationManager

<DataEdit PageTitle="@pagetitle" Model="@sample" BtnSaveText="@buttontext" OnValidSubmit="@SampleSave" OnClickCancel="@Cancel">
    <table>
        <tr>
            <td>Время получения:</td>
            <td>@sample.RecieveTime</td>
        </tr>
        <tr>
            <td>Время начала тестов:</td>
            <td>@sample.TestTime</td>
        </tr>
        <tr>
            <td>Клиент:</td>
            <td>@clis?.Where(x => x.Id == sample.ClientId).FirstOrDefault()?.Name</td>
        </tr>
        <tr>
            <td>Тип образца:</td>
            <td>@sampletypes?.Where(x => x.Id == sample.SampleTypeId).FirstOrDefault()?.Name</td>
        </tr>
        <tr>
            <td>Статус:</td>
            <td>
                <select @bind="sample.Status" required class="form-control">
                    <option value="0">Выберете значение</option>
                    @foreach (var item in GlobalConstant.SampleStatusModel)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td>Готовность:</td>
            <td>
                @if (sample.IsFinal == true)
                {<img src="../images/iGreenCheck.png" width="25" height="25" />}
                else
                {<img src="../images/iRedX.png" width="25" height="25" />}
            </td>
        </tr>
        <tr>
            <td>Записка:</td>
            <td><textarea class="form-control" type="text" id="exampleFormControlTextarea1" rows="5" cols="100" @bind="sample.Note"></textarea></td>
        </tr>
        <tr>
            <td>Место взятия образца:</td>
            <td>@locs?.Where(x => x.Id == sample.LocationId).FirstOrDefault()?.Name</td>
        </tr>
        <tr>
            <td>Причины изменений:</td>
            <td><textarea class="form-control" type="text" id="exampleFormControlTextarea1" rows="5" cols="100" @bind="sample.LastEditComment"></textarea></td>
        </tr>
    </table>
</DataEdit>

@code {
    // Create a new, empty object
    Sample sample = new Sample();
    SampleAnalytical sampleanalytical = new SampleAnalytical();

    IEnumerable<Cli> clis;
    IEnumerable<SampleType> sampletypes;
    IEnumerable<Loc> locs;
    IEnumerable<SampleTypeAnalytical> sampletypeanalyticals;

    [Parameter]
    public int? Id { get; set; }

    // Set default page title and button text
    public string pagetitle = "Изменить статус испытания";
    public string buttontext = "Изменить";

    //Executes on page open, set defaults on page.
    protected override async Task OnInitializedAsync()
    {
        clis = await CliService.CliList();
        sampletypes = await SampleTypeService.SampleTypeList();
        locs = await LocService.LocList();
        sampletypeanalyticals = await SampleTypeAnalyticalService.SampleTypeAnalyticalList();
        sample = await SampleService.Sample_GetOne((int)Id);

    }

    protected async Task SampleSave()
    {
        if (Id == null)
        {
            sample.CreateTime = DateTime.Now;
            sample.CreateUser = "Создавший пользователь";
            // Insert if id is zero.
            // После вставки Insert возвращает новый обьект
            sample = await SampleService.SampleInsert(sample);


        }
        else
        {
            sample.UpdateTime = DateTime.Now;
            sample.UpdateUser = "Обновивший пользователь пользователь";
            // Update is id > 0
            await SampleService.SampleUpdate(sample);
        }
        NavigationManager.NavigateTo("/test/samplelist");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/test/samplelist");
    }
}
