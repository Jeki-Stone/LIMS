@using LIMSBlazor.Data
@page "/config/analyticalservlist"
@inject IAnalyticalServService AnalyticalServService
@inject ICategoryService CategoryService
@inject IUnitService UnitService

<DataView PageTitle="Список аналитических сервисов" UrlAdd="config/analyticalservaddedit" UrlAddText="Добавить новый аналитический сервис">
    <Header>
        <tr>
            <th style="text-align:center">#</th>
            <th>Id</th>
            <th>Наименование</th>
            <th>Категория</th>
            <th>Ед. измерения</th>
            <th>Описание</th>
        </tr>
    </Header>
    <Rows>
        @if (analyticalservs == null)
        {
            <p style="text-align:center">
                <img src="../images/loader.gif" />
            </p>
        }
        else
        {
            @foreach (var analyticalserv in analyticalservs)
            {
                <tr>
                    <td style="text-align:center">
                        <a href="config/analyticalservaddedit/@analyticalserv.Id">
                            <img src="../images/iEdit.png" width="20" height="20" />
                        </a>
                        &nbsp
                        <a href="config/analyticalservdelete/@analyticalserv.Id">
                            <img src="../images/iTrash.png" alt="Delete" title="Delete" width="20" height="20" />
                        </a>
                    </td>
                    <td>@analyticalserv.Id</td>
                    <td>@analyticalserv.Name</td>
                    <td>@сategorys.Where(x => x.Id == analyticalserv.CategoryId).FirstOrDefault()?.Name</td>
                    <td>@units.Where(x => x.Id == analyticalserv.UnitId).FirstOrDefault()?.Name</td>
                    <td>@analyticalserv.Description</td>
                </tr>
            }
        }
    </Rows>
</DataView>

@code {
    IEnumerable<AnalyticalServ> analyticalservs;
    IEnumerable<Category> сategorys;
    IEnumerable<Unit> units;
    protected override async Task OnInitializedAsync()
    {
        analyticalservs = await AnalyticalServService.AnalyticalServList();
        сategorys = await CategoryService.CategoryList();
        units = await UnitService.UnitList();
    }
}
