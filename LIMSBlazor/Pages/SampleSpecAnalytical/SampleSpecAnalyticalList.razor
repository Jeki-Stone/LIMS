@using LIMSBlazor.Data
@page "/config/samplespecanalyticallist"
@inject ISampleSpecAnalyticalService SampleSpecAnalyticalService
@inject ISampleSpecService SampleSpecService
@inject IAnalyticalServService AnalyticalServService

<DataView PageTitle="Список элементов спецификации" UrlAdd="config/samplespecanalyticaladdedit" UrlAddText="Добавить новый элемент спецификации">
    <Header>
        <tr>
            <th style="text-align:center">#</th>
            <th>Спецификация</th>
            <th>Аналитический сервис</th>
            <th>Минимальное значение</th>
            <th>Максимальное значение</th>
        </tr>
    </Header>
    <Rows>
        @if (samplespecanalyticals == null)
        {
            <p style="text-align:center">
                <img src="../images/loader.gif" />
            </p>
        }
        else
        {
            @foreach (var samplespecanalytical in samplespecanalyticals)
            {
                <tr>
                    <td style="text-align:center">
                        <a href="config/samplespecanalyticaladdedit/@samplespecanalytical.SampleSpecId/@samplespecanalytical.AnalyticalServiceId">
                            <img src="../images/iEdit.png" width="20" height="20" />
                        </a>
                        &nbsp
                        <a href="config/samplespecanalyticaldelete/@samplespecanalytical.SampleSpecId/@samplespecanalytical.AnalyticalServiceId">
                            <img src="../images/iTrash.png" alt="Delete" title="Delete" width="20" height="20" />
                        </a>
                    </td>
                    <td>@samplespecs.Where(x => x.Id == samplespecanalytical.SampleSpecId).FirstOrDefault()?.Name</td>
                    <td>@analyticalservs.Where(x => x.Id == samplespecanalytical.AnalyticalServiceId).FirstOrDefault()?.Name</td>
                    <td>@samplespecanalytical.MinValue</td>
                    <td>@samplespecanalytical.MaxValue</td>
                </tr>
            }
        }
    </Rows>
</DataView>

@code {
    /// <summary>
    /// Создаём необходимые компоненты
    /// </summary>
    IEnumerable<SampleSpecAnalytical> samplespecanalyticals;
    IEnumerable<SampleSpec> samplespecs;
    IEnumerable<AnalyticalServ> analyticalservs;

    /// <summary>
    /// Исполняемая при запуске страницы задача
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        samplespecanalyticals = await SampleSpecAnalyticalService.SampleSpecAnalyticalList();
        samplespecs = await SampleSpecService.SampleSpecList();
        analyticalservs = await AnalyticalServService.AnalyticalServList();
    }
}
