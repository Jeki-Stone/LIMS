@using LIMSBlazor.Data
@page "/config/analyticalserv/analyticalserviceattrlist/{AnalyticalServiceId:int}"
@inject IAnalyticalServiceAttrService AnalyticalServiceAttr
@inject IAnalyticalServService AnalyticalServService
@inject IAttrService AttrService

<DataView PageTitle="Список атрибутов аналитических сервисов" UrlAdd=@UrlAnalyticalServId UrlBack="config/analyticalservlist" UrlAddText="Добавить новый атрибут аналитического сервиса" UrlBackText="Вернуться к списку аналитических сервисов">
    <Header>
        <tr>
            <th style="text-align:center">#</th>
            <th>Id аналитического сервиса</th>
            <th>Атрибут</th>
        </tr>
    </Header>
    <Rows>
        @if (analyticalserviceattrs == null)
        {
            <p style="text-align:center">
                <img src="../images/loader.gif" />
            </p>
        }
        else
        {
            @foreach (var analyticalserviceattr in analyticalserviceattrs)
            {
                <tr>
                    <td style="text-align:center">
                        <a href="config/analyticalserv/analyticalserviceattraddedit/@AnalyticalServiceId/@analyticalserviceattr.AttrId">
                            <img src="../images/iEdit.png" width="20" height="20" />
                        </a>
                        &nbsp
                        <a href="config/analyticalserv/analyticalserviceattrdelete/@AnalyticalServiceId/@analyticalserviceattr.AttrId">
                            <img src="../images/iTrash.png" alt="Delete" title="Delete" width="20" height="20" />
                        </a>
                    </td>
                    <td>@analyticalservs?.Where(x => x.Id == analyticalserviceattr.AnalyticalServiceId).FirstOrDefault()?.Name</td>
                    <td>@attrs?.Where(x => x.Id == analyticalserviceattr.AttrId).FirstOrDefault()?.Name</td>
                </tr>
            }
        }
    </Rows>
</DataView>

@code {
    /// <summary>
    /// Создаём необходимые компоненты
    /// </summary>
    IEnumerable<AnalyticalServiceAttr> analyticalserviceattrs;
    IEnumerable<AnalyticalServ> analyticalservs;
    IEnumerable<Attr> attrs;

    [Parameter]
    public int AnalyticalServiceId { get; set; }
    [Parameter]
    public string UrlAnalyticalServId { get; set; }

    /// <summary>
    /// Исполняемая при запуске страницы задача
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        analyticalserviceattrs = await AnalyticalServiceAttr.AnalyticalServiceAttrList(AnalyticalServiceId);
        analyticalservs = await AnalyticalServService.AnalyticalServList();
        attrs = await AttrService.AttrList();
        UrlAnalyticalServId = "config/analyticalserv/analyticalserviceattraddedit/" + AnalyticalServiceId;
    }
}
