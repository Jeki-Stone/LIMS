@using LIMSBlazor.Data
@page "/config/instrumtypeaddedit"
@page "/config/instrumtypeaddedit/{id:int}"
@inject IInstrumTypeService InstrumTypeService
@inject NavigationManager NavigationManager

<DataEdit PageTitle="@pagetitle" Model="@instrumtype" BtnSaveText="@buttontext" OnValidSubmit="@InstrumTypeSave" OnClickCancel="@Cancel">
    <table>
        <tr>
            <td>Наименование типа:</td>
            <td><input type="text" @bind="instrumtype.Name" class="form-control" required></td>
        </tr>
        <tr>
            <td>Описание типа:</td>
            <td><textarea class="form-control" type="text" id="exampleFormControlTextarea1" rows="5" cols="100" @bind="instrumtype.Description"></textarea></td>
        </tr>
    </table>
</DataEdit>

    @code {
        // Create a new, empty object
        InstrumType instrumtype = new InstrumType();

        [Parameter]
        public int id { get; set; }

        // Set default page title and button text
        public string pagetitle = "Добавить новый тип оборудования";
        public string buttontext = "Добавить";

        //Executes on page open, set defaults on page.
        protected override async Task OnInitializedAsync()
        {
            // ============ If the passed-in id is zero, assume new data.
            if (id != 0)
            {
                instrumtype = await InstrumTypeService.InstrumType_GetOne(id);
                // Change page title and button text since this is an edit.
                pagetitle = "Изменить данные типа оборудования";
                buttontext = "Изменить";
            }
        }

        protected async Task InstrumTypeSave()
        {
            if (instrumtype.Id == 0)
            {
                // Insert if id is zero.
                await InstrumTypeService.InstrumTypeInsert(instrumtype);
            }
            else
            {
                // Update is id > 0
                await InstrumTypeService.InstrumTypeUpdate(instrumtype);
            }
            NavigationManager.NavigateTo("/config/instrumtypelist");
        }
        void Cancel()
        {
            NavigationManager.NavigateTo("/config/instrumtypelist");
        }
    }
