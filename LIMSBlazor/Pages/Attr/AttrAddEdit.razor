@using LIMSBlazor.Data
@page "/config/attraddedit"
@page "/config/attraddedit/{id:int}"
@inject IAttrService AttrService
@inject NavigationManager NavigationManager

<DataEdit PageTitle="@pagetitle" Model="@attr" BtnSaveText="@buttontext" OnValidSubmit="@AttrSave" OnClickCancel="@Cancel">
    <table>
        <tr>
            <td>Наименование:</td>
            <td><input type="text" @bind="attr.Name" class="form-control" required></td>
        </tr>
        <tr>
            <td>Описание:</td>
            <td><textarea class="form-control" type="text" id="exampleFormControlTextarea1" rows="5" cols="100" @bind="attr.Description"></textarea></td>
        </tr>
        <tr>
            <td>Тип:</td>
            <td>
                <select @bind="attr.Type" required class="form-control">
                    <option value="0">Выберете значение</option>
                    @foreach (var item in GlobalConstant.AttrTypeModel)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td>Опция:</td>
            <td><input type="text" @bind="attr.Options" class="form-control"></td>
        </tr>
    </table>
</DataEdit>

    @code {
        // Create a new, empty object
        Attr attr = new Attr();

        [Parameter]
        public int id { get; set; }

        // Set default page title and button text
        public string pagetitle = "Добавить новый аттрибут";
        public string buttontext = "Добавить";

        //Executes on page open, set defaults on page.
        protected override async Task OnInitializedAsync()
        {
            // ============ If the passed-in id is zero, assume new data.
            if (id != 0)
            {
                attr = await AttrService.Attr_GetOne(id);
                // Change page title and button text since this is an edit.
                pagetitle = "Изменить данные аттрибута";
                buttontext = "Изменить";
            }
        }

        protected async Task AttrSave()
        {
            if (attr.Id == 0)
            {
                // Insert if id is zero.
                await AttrService.AttrInsert(attr);
            }
            else
            {
                // Update is id > 0
                await AttrService.AttrUpdate(attr);
            }
            NavigationManager.NavigateTo("config/attrlist");
        }
        void Cancel()
        {
            NavigationManager.NavigateTo("config/attrlist");
        }
    }
