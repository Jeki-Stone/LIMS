@page "/Login"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
<h3>ClaimsPrincipal Data</h3>
<button @onclick="GetClaimsPrincipalData">Get ClaimsPrincipal Data</button>
<p>@_authMessage</p>
@if (_claims.Count() > 0)
{
    <ul>
        @foreach (var claim in _claims)
        {
            <li>@claim.Type: @claim.Value</li>
        }
    </ul>
}
<p>@_surnameMessage</p>
@code {
    private string _authMessage;
    private string _surnameMessage;
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();
    private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            _authMessage = $"{user.Identity.Name} is authenticated.";
            _claims = user.Claims;
            _surnameMessage =
            $"Surname: {user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value}";
        }
        else
        {
            _authMessage = "The user is NOT authenticated.";
        }
    }
}


@*@page "/Login"

    @using LIMSBlazor.Data
    @using System.Collections.Generic;

    @inject IUserService UserService
    @inject ICliService CliService

    <div style="text-align:center">
        <table>
            <tr>
                <td>Имя Пользователя:</td>
                <td><input type="text" @bind="Name" class="form-control" required></td>
            </tr>
            <tr>
                <td>Пароль:</td>
                <td><input type="text" @bind="Password" class="form-control" required></td>
            </tr>
            <tr>
                <td><Button Color="Color.Primary" @onclick="Login">Войти</Button></td>
            </tr>
        </table>
    </div>

    @code {
        /// <summary>
        /// Создаём необходимые компоненты
        /// </summary>
        //IEnumerable<User> users;
        //IEnumerable<Cli> clis;

        string Name;
        string Password;

        /// <summary>
        /// Исполняемая при запуске страницы задача
        /// </summary>
        protected override async Task OnInitializedAsync()
        {

        }

        /// <summary>
        /// Посылаем запрос на соответствие в БД и авторизуемся
        /// </summary>
        private async Task Login()
        {
            //users = await UserService.User_GetLogin(Name, Password);
            //clis = await CliService.Cli_GetLogin(Name, Password);
        }
    }*@
