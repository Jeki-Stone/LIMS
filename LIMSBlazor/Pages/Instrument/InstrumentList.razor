@using LIMSBlazor.Data
@page "/config/instrumentlist"
@inject IInstrumentService InstrumentService
@inject ILabService LabService
@inject IInstrumTypeService InstrumTypeService

<DataView PageTitle="Список оборудовния" UrlAdd="/config/instrumentaddedit" UrlAddText="Добавить оборудовние">
    <Header>
        <tr>
            <th style="text-align:center">#</th>
            <th>Id</th>
            <th>Название</th>
            <th>Тип оборудования</th>
            <th>Серийный номер</th>
            <th>Статус</th>
            <th>Лаборатория</th>
            <th>Описание</th>
        </tr>
    </Header>
    <Rows>
        @if (instruments == null)
        {
            <p style="text-align:center">
                <img src="../images/loader.gif" />
            </p>
        }
        else
        {
            @foreach (var instrument in instruments)
            {
                <tr>
                    <td style="text-align:center">
                        <a href="/config/instrumentaddedit/@instrument.Id">
                            <img src="../images/iEdit.png" width="20" height="20" />
                        </a>
                        &nbsp
                        <a href="/config/instrumentdelete/@instrument.Id">
                            <img src="../images/iTrash.png" alt="Delete" title="Delete" width="20" height="20" />
                        </a>
                    </td>
                    <td>@instrument.Id</td>
                    <td>@instrument.Name</td>
                    <td>@instrumtypes.Where(x => x.Id == instrument.InstrumentTypeId).FirstOrDefault()?.Name</td>
                    <td>@instrument.SerialNumber</td>
                    <td>@instrument.Status</td>
                    <td>@labs.Where(x => x.Id == instrument.LabId).FirstOrDefault()?.Name</td>
                    <td>@instrument.Description</td>
                </tr>
            }
        }
    </Rows>
</DataView>

@code {
    IEnumerable<Instrument> instruments;
    IEnumerable<InstrumType> instrumtypes;
    IEnumerable<Lab> labs;

    protected override async Task OnInitializedAsync()
    {
        instrumtypes = await InstrumTypeService.InstrumTypeList();
        labs = await LabService.LabList();
        instruments = await InstrumentService.InstrumentList();
    }
}
