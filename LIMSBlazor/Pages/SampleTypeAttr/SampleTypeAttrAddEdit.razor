@using LIMSBlazor.Data
@page "/sampletype/sampletypeattraddedit/{SampleTypeId:int}"
@page "/sampletype/sampletypeattraddedit/{SampleTypeId:int}/{AttrId:int}"
@inject ISampleTypeAttrService SampleTypeAttrService
@inject ISampleTypeService SampleTypeService
@inject IAttrService AttrService
@inject NavigationManager NavigationManager

<DataEdit PageTitle="@pagetitle" Model="@sampletypeattr" BtnSaveText="@buttontext" OnValidSubmit="@SampleTypeAttrSave" OnClickCancel="@Cancel">
    <table>
        <tr>
            <td>Тип образца:</td>
            <td>@sampletypes?.Where(x => x.Id == SampleTypeId).FirstOrDefault()?.Name</td>
        </tr>
        <tr>
            <td>Атрибут:</td>
            <td>
                <select @bind="sampletypeattr.AttrId" class="form-control" required>
                    @if (attrs != null)
                    {
                        <option value="0">Выберите значение</option>
                        foreach (var item in attrs)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                </select>
            </td>
        </tr>
    </table>
</DataEdit>

    @code {
        // Create a new, empty object
        SampleTypeAttr sampletypeattr = new SampleTypeAttr();

        IEnumerable<SampleType> sampletypes;
        IEnumerable<Attr> attrs;

        [Parameter]
        public int SampleTypeId { get; set; }
        [Parameter]
        public int AttrId { get; set; }

        // Set default page title and button text
        public string pagetitle = "Добавить новый атрибут для типа испытания";
        public string buttontext = "Добавить";

        //Executes on page open, set defaults on page.
        protected override async Task OnInitializedAsync()
        {
            sampletypes = await SampleTypeService.SampleTypeList();
            attrs = await AttrService.AttrList();
            // ============ If the passed-in id is zero, assume new data.
            if ((SampleTypeId != 0) & (AttrId != 0))
            {
                sampletypeattr = await SampleTypeAttrService.SampleTypeAttr_GetOne(SampleTypeId, AttrId);
                // Change page title and button text since this is an edit.

                pagetitle = "Изменить данные атрибута для типа испытания";
                buttontext = "Изменить";
            }
        }

        protected async Task SampleTypeAttrSave()
        {
            if ((sampletypeattr.SampleTypeId != 0) & (sampletypeattr.AttrId != 0))
            {
                // Update is id > 0
                sampletypeattr.OldAttrId = AttrId;
                await SampleTypeAttrService.SampleTypeAttrUpdate(sampletypeattr);                
            }
            else
            {
                // Insert if id is zero.
                await SampleTypeAttrService.SampleTypeAttrInsert(sampletypeattr, SampleTypeId);
            }
            NavigationManager.NavigateTo("/sampletype/sampletypeattrlist/" + SampleTypeId);
        }
        void Cancel()
        {
            NavigationManager.NavigateTo("/sampletype/sampletypeattrlist/" + SampleTypeId);
        }
    }
