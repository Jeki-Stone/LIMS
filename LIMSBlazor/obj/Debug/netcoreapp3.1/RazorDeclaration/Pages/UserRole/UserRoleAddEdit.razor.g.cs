// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LIMSBlazor.Pages.UserRole
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\_Imports.razor"
using LIMSBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\_Imports.razor"
using LIMSBlazor.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\Pages\UserRole\UserRoleAddEdit.razor"
using LIMSBlazor.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/userlist/userroleaddedit/{UserId:int}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/userlist/userroleaddedit/{UserId:int}/{LabId:int}/{RoleId:int}")]
    public partial class UserRoleAddEdit : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 49 "C:\Users\Иван\source\repos\LIMSBlazor\LIMSBlazor\Pages\UserRole\UserRoleAddEdit.razor"
           
        // Create a new, empty object
        UserRole userrole = new UserRole();

        IEnumerable<User> users;
        IEnumerable<Lab> labs;
        IEnumerable<Role> roles;

        [Parameter]
        public int UserId { get; set; }
        [Parameter]
        public int LabId { get; set; }
        [Parameter]
        public int RoleId { get; set; }

        // Set default page title and button text
        public string pagetitle = "Добавить новую роль пользователю";
        public string buttontext = "Добавить";

        //Executes on page open, set defaults on page.
        protected override async Task OnInitializedAsync()
        {
            users = await UserService.UserList();
            labs = await LabService.LabList();
            roles = await RoleService.RoleList();
            // ============ If the passed-in id is zero, assume new data.
            if ((UserId != 0) & (LabId != 0) & (RoleId != 0))
            {
                userrole = await UserRoleService.UserRole_GetOne(UserId, LabId, RoleId);
                // Change page title and button text since this is an edit.

                pagetitle = "Изменить данные роли пользователя";
                buttontext = "Изменить";
            }
        }

        protected async Task UserRoleSave()
        {
            if ((userrole.UserId != 0) & (userrole.LabId != 0) & (userrole.RoleId != 0))
            {
                // Update is id > 0
                userrole.OldLabId = LabId;
                userrole.OldRoleId = RoleId;
                await UserRoleService.UserRoleUpdate(userrole);
            }
            else
            {
                // Insert if id is zero.
                await UserRoleService.UserRoleInsert(userrole, UserId);
            }
            NavigationManager.NavigateTo("/userlist/userrolelist/" + UserId);
        }
        void Cancel()
        {
            NavigationManager.NavigateTo("/userlist/userrolelist/" + UserId);
        }
    

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRoleService RoleService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserService UserService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILabService LabService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserRoleService UserRoleService { get; set; }
    }
}
#pragma warning restore 1591
